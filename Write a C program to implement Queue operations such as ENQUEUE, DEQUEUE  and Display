#include <stdio.h>
#define MAX 5  // maximum size of queue

int queue[MAX];
int front = -1, rear = -1;

// Function to check if queue is full
int isFull() {
    return (rear == MAX - 1);
}

// Function to check if queue is empty
int isEmpty() {
    return (front == -1 || front > rear);
}

// Function to insert (ENQUEUE)
void enqueue(int val) {
    if (isFull()) {
        printf("Queue Overflow! Cannot insert %d\n", val);
        return;
    }
    if (front == -1) front = 0; // first element
    queue[++rear] = val;
    printf("Enqueued %d\n", val);
}

// Function to delete (DEQUEUE)
void dequeue() {
    if (isEmpty()) {
        printf("Queue Underflow! Nothing to delete\n");
        return;
    }
    printf("Dequeued %d\n", queue[front++]);
}

// Function to display queue
void display() {
    if (isEmpty()) {
        printf("Queue is empty\n");
        return;
    }
    printf("Queue elements: ");
    for (int i = front; i <= rear; i++) {
        printf("%d ", queue[i]);
    }
    printf("\n");
}

// Main function
int main() {
    int choice, val;

    while (1) {
        printf("\n--- Queue Operations Menu ---\n");
        printf("1. ENQUEUE\n2. DEQUEUE\n3. Display\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to enqueue: ");
                scanf("%d", &val);
                enqueue(val);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                return 0;
            default:
                printf("Invalid choice!\n");
        }
    }
}
