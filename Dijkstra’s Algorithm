// dijkstra.c
#include <stdio.h>
#define INF 9999
#define MAX 100

void dijkstra(int graph[MAX][MAX], int n, int start) {
    int distance[MAX], visited[MAX] = {0}, i, j, min, next;

    for (i = 0; i < n; i++) {
        distance[i] = graph[start][i];
    }
    distance[start] = 0;
    visited[start] = 1;

    for (i = 1; i < n; i++) {
        min = INF;
        for (j = 0; j < n; j++) {
            if (!visited[j] && distance[j] < min) {
                min = distance[j];
                next = j;
            }
        }

        visited[next] = 1;

        for (j = 0; j < n; j++) {
            if (!visited[j]) {
                if (min + graph[next][j] < distance[j])
                    distance[j] = min + graph[next][j];
            }
        }
    }

    printf("Vertex\tDistance from Source\n");
    for (i = 0; i < n; i++) {
        printf("%d\t%d\n", i, distance[i]);
    }
}

int main() {
    int graph[MAX][MAX], n, i, j, start;
    printf("Enter number of vertices: ");
    scanf("%d", &n);
    printf("Enter the adjacency matrix (use 9999 for no edge):\n");

    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++)
            scanf("%d", &graph[i][j]);

    printf("Enter the source vertex: ");
    scanf("%d", &start);

    dijkstra(graph, n, start);

    return 0;
}
